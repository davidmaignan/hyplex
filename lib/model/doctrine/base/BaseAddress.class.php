<?php

/**
 * BaseAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $address_1
 * @property string $address_2
 * @property string $city
 * @property string $state
 * @property integer $country_id
 * @property string $postcode
 * @property integer $phone
 * @property integer $cellphone
 * @property string $email
 * @property Country $Country
 * @property Booking $Booking
 * 
 * @method integer getId()         Returns the current record's "id" value
 * @method string  getAddress1()   Returns the current record's "address_1" value
 * @method string  getAddress2()   Returns the current record's "address_2" value
 * @method string  getCity()       Returns the current record's "city" value
 * @method string  getState()      Returns the current record's "state" value
 * @method integer getCountryId()  Returns the current record's "country_id" value
 * @method string  getPostcode()   Returns the current record's "postcode" value
 * @method integer getPhone()      Returns the current record's "phone" value
 * @method integer getCellphone()  Returns the current record's "cellphone" value
 * @method string  getEmail()      Returns the current record's "email" value
 * @method Country getCountry()    Returns the current record's "Country" value
 * @method Booking getBooking()    Returns the current record's "Booking" value
 * @method Address setId()         Sets the current record's "id" value
 * @method Address setAddress1()   Sets the current record's "address_1" value
 * @method Address setAddress2()   Sets the current record's "address_2" value
 * @method Address setCity()       Sets the current record's "city" value
 * @method Address setState()      Sets the current record's "state" value
 * @method Address setCountryId()  Sets the current record's "country_id" value
 * @method Address setPostcode()   Sets the current record's "postcode" value
 * @method Address setPhone()      Sets the current record's "phone" value
 * @method Address setCellphone()  Sets the current record's "cellphone" value
 * @method Address setEmail()      Sets the current record's "email" value
 * @method Address setCountry()    Sets the current record's "Country" value
 * @method Address setBooking()    Sets the current record's "Booking" value
 * 
 * @package    hyplexdemo
 * @subpackage model
 * @author     David Maignan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('address');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('address_1', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address_2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('country_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('postcode', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('phone', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('cellphone', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('Booking', array(
             'local' => 'id',
             'foreign' => 'address_id'));
    }
}