<?php

/**
 * BaseCity_metro
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $city_metro_id
 * @property City $City
 * @property Doctrine_Collection $Cities
 * @property Doctrine_Collection $CityMultipleAirport
 * 
 * @method integer             getCityMetroId()         Returns the current record's "city_metro_id" value
 * @method City                getCity()                Returns the current record's "City" value
 * @method Doctrine_Collection getCities()              Returns the current record's "Cities" collection
 * @method Doctrine_Collection getCityMultipleAirport() Returns the current record's "CityMultipleAirport" collection
 * @method City_metro          setCityMetroId()         Sets the current record's "city_metro_id" value
 * @method City_metro          setCity()                Sets the current record's "City" value
 * @method City_metro          setCities()              Sets the current record's "Cities" collection
 * @method City_metro          setCityMultipleAirport() Sets the current record's "CityMultipleAirport" collection
 * 
 * @package    hypertech_booking
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCity_metro extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('city_metro');
        $this->hasColumn('city_metro_id', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             'notnull' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('City', array(
             'local' => 'city_metro_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('City as Cities', array(
             'refClass' => 'CityMultipleAirport',
             'local' => 'city_metro_id',
             'foreign' => 'city_id'));

        $this->hasMany('CityMultipleAirport', array(
             'local' => 'id',
             'foreign' => 'city_metro_id'));
    }
}