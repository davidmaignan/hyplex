<?php

/**
 * Basepms_clarification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property enum $clarification_type
 * @property integer $pms_ticket_id
 * @property integer $from_user_id
 * @property integer $to_user_id
 * @property clob $message
 * @property clob $answer
 * @property boolean $is_internal
 * @property sfGuardUser $sfGuardUser
 * @property pms_ticket $PmsTicket
 * 
 * @method enum              getClarificationType()  Returns the current record's "clarification_type" value
 * @method integer           getPmsTicketId()        Returns the current record's "pms_ticket_id" value
 * @method integer           getFromUserId()         Returns the current record's "from_user_id" value
 * @method integer           getToUserId()           Returns the current record's "to_user_id" value
 * @method clob              getMessage()            Returns the current record's "message" value
 * @method clob              getAnswer()             Returns the current record's "answer" value
 * @method boolean           getIsInternal()         Returns the current record's "is_internal" value
 * @method sfGuardUser       getSfGuardUser()        Returns the current record's "sfGuardUser" value
 * @method pms_ticket        getPmsTicket()          Returns the current record's "PmsTicket" value
 * @method pms_clarification setClarificationType()  Sets the current record's "clarification_type" value
 * @method pms_clarification setPmsTicketId()        Sets the current record's "pms_ticket_id" value
 * @method pms_clarification setFromUserId()         Sets the current record's "from_user_id" value
 * @method pms_clarification setToUserId()           Sets the current record's "to_user_id" value
 * @method pms_clarification setMessage()            Sets the current record's "message" value
 * @method pms_clarification setAnswer()             Sets the current record's "answer" value
 * @method pms_clarification setIsInternal()         Sets the current record's "is_internal" value
 * @method pms_clarification setSfGuardUser()        Sets the current record's "sfGuardUser" value
 * @method pms_clarification setPmsTicket()          Sets the current record's "PmsTicket" value
 * 
 * @package    hypertech_booking
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basepms_clarification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pms_clarification');
        $this->hasColumn('clarification_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'question',
              1 => 'answer',
              2 => 'note',
             ),
             ));
        $this->hasColumn('pms_ticket_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('from_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('to_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('answer', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_internal', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'to_user_id',
             'foreign' => 'id'));

        $this->hasOne('pms_ticket as PmsTicket', array(
             'local' => 'pms_ticket_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}